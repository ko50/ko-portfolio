{"version":3,"sources":["data/BaseColors.ts","components/header/TransisionButton.tsx","components/header/PageTopButton.tsx","components/header/Header.tsx","helpers/FadeAnimation.ts","components/hello/Hello.tsx","components/common/Footer.tsx","data/value/AboutMeValue.ts","data/type/SkillData.ts","helpers/CalcAge.ts","components/sections/Section.tsx","components/sections/about_me/AboutMe.tsx","components/sections/skills/components/SkillCard.tsx","components/sections/skills/components/SkillsUnit.tsx","data/value/SkillValue.ts","components/sections/skills/Skills.tsx","data/value/WorkValue.ts","components/sections/works/components/WorkCard.tsx","components/sections/works/Works.tsx","data/value/ContactValue.ts","components/sections/contacts/components/ContactCard.tsx","components/sections/contacts/Contacts.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["BaseColors","Button","styled","div","props","hovered","TransitionButton","TransitionContext","Consumer","currentViewIndex","HoverContext","hoveredIndex","index","onMouseEnter","_","onHover","onMouseLeave","onDisHover","onClick","text","Container","Title","PageTopButton","Background","ButtonsWrapper","React","createContext","Header","useState","updateView","Provider","value","map","FadeoutAnimation","keyframes","FadeinAnimation","visible","IconBackground","Icon","img","Text","Hello","src","CopyrightContainer","Divider","Copyright","Footer","SkillCategory","myBirthDay","Date","AboutMeValue","title","content","birthDay","now","beforeMonth","getMonth","beforeDay","getDay","getFullYear","CalcAge","SubTitle","Section","subTitle","Introduce","IntroduceTitle","IntroduceContent","AboutMe","SkillName","Description","SkillCard","data","iconSrc","name","description","SkillsUnit","category","skills","skill","SkillValue","skillType","language","framework","tool","Skills","languagesSkills","filter","frameworksSkills","toolsSkills","WorkValue","url","tag","snapshotSrc","BackgroundLink","a","Snapshot","Tags","WorkCard","href","target","rel","join","Works","ContactValue","serviceName","caption","Leading","CardName","ContactCard","Contacts","Root","ContentWrapper","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.75e3f2cb.chunk.js","sourcesContent":["export const BaseColors = {\r\n    darkPurple: \"#280E3B\",\r\n    purplePink: \"#D3B7D8\",\r\n    grey: \"#BFBFBF\",\r\n    darkGrey: \"#323232\",\r\n    github: \"#171717\",\r\n    pink: \"#fdfaff\",\r\n    shadow: \"rgba(0, 0, 0, 0.5)\"\r\n};","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { BaseColors } from 'data/BaseColors'\r\nimport { TransitionContext } from 'App'\r\nimport { HoverContext } from 'components/header/Header'\r\n\r\nconst Button = styled.div<{ hovered: Boolean }>`\r\n  color: ${BaseColors.purplePink};\r\n  font-weight: 700;\r\n  height: 1.2em;\r\n  margin-left: 15px;\r\n  border-bottom: 1px solid ${BaseColors.purplePink};\r\n  cursor: pointer;\r\n  transition: 300ms;\r\n  ${(props) => (props.hovered ? \"color: white;\" : \"\")}\r\n`;\r\n\r\ntype Props = {\r\n  index: number,\r\n  text: string,\r\n  onHover: (index: number) => void,\r\n  onDisHover: () => void,\r\n  onClick: (index: number) => void,\r\n};\r\n\r\nconst TransitionButton = (props: Props) => {\r\n  return (\r\n    <TransitionContext.Consumer>\r\n      { currentViewIndex => (\r\n        <HoverContext.Consumer>\r\n          { hoveredIndex => (\r\n            <Button\r\n              hovered={currentViewIndex === props.index || hoveredIndex === props.index || (currentViewIndex === -1 && hoveredIndex === -1)}\r\n              onMouseEnter={(_) => props.onHover(props.index)}\r\n              onMouseLeave={(_) => props.onDisHover()}\r\n              onClick={(_) => props.onClick(props.index)}\r\n            >\r\n              {props.text}\r\n            </Button>\r\n          )}\r\n        </HoverContext.Consumer>\r\n      )}\r\n    </TransitionContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default TransitionButton;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  padding-left: 30px;\r\n  align-items: left;\r\n  flex: 1;\r\n  min-width: 0;\r\n  font-size: 1.8em;\r\n  height: 1em;\r\n  font-weight: 900;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  width: fit-content;\r\n  text-align: left;\r\n  cursor: pointer;\r\n`;\r\n\r\ntype Props = { onClick: (index: number) => void };\r\n\r\nconst PageTopButton = (props: Props) => {\r\n  return (\r\n    <Container onClick={(_) => props.onClick(-1)}>\r\n      <Title>ko's Portfolio</Title>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PageTopButton;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { BaseColors } from 'data/BaseColors'\r\nimport TransitionButton from 'components/header/TransisionButton'\r\nimport PageTopButton from 'components/header/PageTopButton'\r\n\r\nconst Background = styled.div`\r\n  position: sticky;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: auto;\r\n  background-color: ${BaseColors.darkPurple};\r\n  color: white;\r\n  border-bottom: 4px solid ${BaseColors.purplePink};\r\n  box-shadow: 0px 0px 5px 0px ${BaseColors.shadow};\r\n  z-index: 500000000000;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  margin-top: 1em;\r\n  margin-bottom: 1em;\r\n  float: right;\r\n  display: flex;\r\n  flex-direction: left;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst ButtonsWrapper = styled.div`\r\n  font-size: 1.3em;\r\n  margin-right: 2.6em;\r\n  display: flex;\r\n  height: 1em;\r\n`;\r\n\r\ntype Props = {\r\n  updateView: (index: number) => void,\r\n};\r\n\r\nexport const HoverContext = React.createContext(0);\r\n\r\nexport const Header = (props: Props) => {\r\n  const subViews: string[] = [\r\n    \"About Me\",\r\n    \"Skills\",\r\n    \"Works\",\r\n    \"Contacts\",\r\n  ];\r\n\r\n  const [hoveredIndex, onHover] = React.useState(-1);\r\n\r\n  return (\r\n    <Background>\r\n      <Container>\r\n        <PageTopButton onClick={(index) => props.updateView(index)} />\r\n        <HoverContext.Provider value={hoveredIndex}>\r\n          <ButtonsWrapper>\r\n            {subViews.map((value: string, index) =>\r\n              <TransitionButton\r\n                text={value}\r\n                index={index}\r\n                onHover={(index: number) => onHover(index)}\r\n                onDisHover={() => onHover(-1)}\r\n                onClick={(index: number) => props.updateView(index)}\r\n              />\r\n            )}\r\n          </ButtonsWrapper>\r\n        </HoverContext.Provider>\r\n      </Container>\r\n    </Background>\r\n  );\r\n};\r\n","import { keyframes } from 'styled-components'\r\n\r\nexport const FadeoutAnimation = keyframes`\r\n  from {\r\n    visibility: visible;\r\n  }\r\n\r\n  to {\r\n    visibility: hidden;\r\n  }\r\n`;\r\n\r\nexport const FadeinAnimation = keyframes`\r\n  from {\r\n    visibility: visible;\r\n  }\r\n\r\n  to {\r\n    visibility: visible;\r\n  }\r\n`;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { BaseColors } from 'data/BaseColors'\r\nimport { TransitionContext } from 'App'\r\nimport { FadeoutAnimation, FadeinAnimation } from 'helpers/FadeAnimation'\r\n\r\nconst Background = styled.div<{ visible: Boolean }>`\r\n  width: 100%;\r\n  position: absolute;\r\n  flex: 1;\r\n  transition: 300ms;\r\n  transition-delay: ${(props) => props.visible ? \"400\" : \"0\"}ms;\r\n  transform: translateY(${(props) => props.visible ? \"3\" : \"0\"}px);\r\n  opacity: ${(props) => props.visible ? \"1\" : \"0\"};\r\n\r\n  animation: ${(props) => (\r\n    props.visible\r\n      ? FadeinAnimation\r\n      : FadeoutAnimation\r\n  )};\r\n  animation-delay: ${(props) => props.visible ? \"200\" : \"0\"}ms;\r\n  animation-duration: 300ms;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  min-height: 80vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst IconBackground = styled.div`\r\n  background: linear-gradient(-45deg, ${BaseColors.darkPurple}, #BD3A9A);\r\n  height: 20em;\r\n  width: 20em;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  box-shadow: 0 0 5px 0 ${BaseColors.shadow};\r\n`;\r\n\r\nconst Icon = styled.img`\r\n  border: 0.5em solid white;\r\n  border-radius: 50%;\r\n  height: 90%;\r\n  width: 90%;\r\n`;\r\n\r\nconst Text = styled.div`\r\n  font-size: 2.3em;\r\n  margin-top: 1em;\r\n  font-weight: 700;\r\n  color: ${BaseColors.darkPurple};\r\n`;\r\n\r\nexport default function Hello() {\r\n  return (\r\n    <TransitionContext.Consumer>\r\n      {currentViewIndex => (\r\n        <Background visible={currentViewIndex === -1}>\r\n          <Container>\r\n            <IconBackground>\r\n              <Icon src=\"cotton_circle.png\" />\r\n            </IconBackground>\r\n            <Text>Hello World, My name is ko!</Text>\r\n          </Container>\r\n        </Background>\r\n      )}\r\n    </TransitionContext.Consumer>\r\n  )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { BaseColors } from 'data/BaseColors'\r\n\r\nconst Background = styled.div`\r\n  position: sticky;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: auto;\r\n  background-color: ${BaseColors.darkPurple};\r\n  border-top: 4px solid ${BaseColors.purplePink};\r\n  box-shadow: 0px 0px 5px 0px ${BaseColors.shadow};\r\n  z-index: 500000000000;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  padding-top: 0.7em;\r\n  padding-bottom: 0.7em;\r\n  padding-right: 2em;\r\n  padding-left: 2em;\r\n`;\r\n\r\nconst CopyrightContainer = styled.div`\r\n  padding-top: 0.5em;\r\n`;\r\n\r\n/*\r\nconst RightsNotation = styled.div`\r\n  color: ${BaseColors.};\r\n`;\r\n*/\r\n\r\nconst Divider = styled.div` \r\n  width: 1.5em;\r\n  height: 1px;\r\n  margin-top: 2.5px;\r\n  padding-bottom: 5px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  border-top: 1px solid ${BaseColors.grey};\r\n`;\r\n\r\nconst Copyright = styled.div`\r\n  font-size: 0.4em;\r\n  color: ${BaseColors.grey};\r\n`;\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <Background>\r\n      <Container>\r\n        <CopyrightContainer>\r\n          <Divider />\r\n          <Copyright>© 2020 ko</Copyright>\r\n        </CopyrightContainer>\r\n      </Container>\r\n    </Background>\r\n  )\r\n}","import { AboutMeData } from 'data/type/AboutMeData'\r\nimport { CalcAge } from 'helpers/CalcAge'\r\n\r\nconst myBirthDay: Date = new Date(2004, 1, 24);\r\n\r\nexport const AboutMeValue: AboutMeData[] = [\r\n  {\r\n    title: \"所属\",\r\n    content: \"茨城工業高等専門学校 国際創造工学科 二年\",\r\n  },\r\n  {\r\n    title: \"専攻\",\r\n    content: \"情報系/グローバル系 専攻\",\r\n  },\r\n  {\r\n    title: \"仕様\",\r\n    content: `${CalcAge(myBirthDay)}歳 男性`,\r\n  },\r\n  {\r\n    title: \"その他\",\r\n    content: \"テトリスと少女終末旅行が好きです\",\r\n  },\r\n];\r\n","export enum SkillCategory {\r\n  language = 'Languages',\r\n  framework = 'Frameworks',\r\n  tool = 'Tools',\r\n};\r\n\r\nexport type SkillData = {\r\n  skillType: SkillCategory,\r\n  iconSrc: string,\r\n  name: string,\r\n  description: string,\r\n};\r\n","export function CalcAge(birthDay: Date): number {\r\n  const now = new Date();\r\n  const beforeMonth: boolean = now.getMonth() < birthDay.getMonth();\r\n  const beforeDay: boolean = now.getDay() < birthDay.getDay();\r\n\r\n  if (beforeMonth && beforeDay) {\r\n    return now.getFullYear() - birthDay.getFullYear() - 1;\r\n  }\r\n\r\n  return now.getFullYear() - birthDay.getFullYear();\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { BaseColors } from 'data/BaseColors'\r\nimport { TransitionContext } from 'App'\r\nimport { FadeoutAnimation, FadeinAnimation } from 'helpers/FadeAnimation'\r\n\r\nconst Background = styled.div<{ visible: Boolean }>`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  position: absolute;\r\n  transition: 300ms;\r\n  transition-delay: ${(props) => props.visible ? \"400\" : \"0\"}ms;\r\n  opacity: ${(props) => props.visible ? \"1\" : \"0\"};\r\n  transform: translateY(${(props) => props.visible ? \"0\" : \"3px\"});\r\n  z-index: ${(props) => props.visible ? \"1\" : \"0\"};\r\n\r\n  animation: ${(props) => (\r\n    props.visible\r\n      ? FadeinAnimation\r\n      : FadeoutAnimation\r\n  )};\r\n  animation-delay: ${(props) => props.visible ? \"200\" : \"0\"}ms;\r\n  animation-duration: 300ms;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  width: fit-content;\r\n  font-size: 2.5em;\r\n  font-weight: 900;\r\n  color: ${BaseColors.darkPurple};\r\n  margin: 2em 1em 0.5em 1em;\r\n  border-bottom: 1px solid ${BaseColors.darkPurple};\r\n`;\r\n\r\nconst SubTitle = styled.div`\r\n  font-size: 0.9em;\r\n  margin-bottom: 2em;\r\n`;\r\n\r\ntype Props = {\r\n  index: number,\r\n  title: string,\r\n  subTitle: string,\r\n  content: JSX.Element,\r\n};\r\n\r\nexport const Section = (props: Props) => {\r\n  return (\r\n    <TransitionContext.Consumer>\r\n      { currentViewIndex => (\r\n        <Background visible={currentViewIndex === props.index}>\r\n          <Title>{props.title}</Title>\r\n          <SubTitle>{props.subTitle}</SubTitle>\r\n          {props.content}\r\n        </Background>\r\n      )}\r\n    </TransitionContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { TransitionContext } from 'App'\r\nimport { BaseColors } from 'data/BaseColors'\r\nimport { AboutMeValue } from 'data/value/AboutMeValue'\r\nimport { Section } from 'components/sections/Section'\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: auto;\r\n  width: fit-content;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Introduce = styled.div<{ index: number, visible: Boolean }>`\r\n  width: auto;\r\n  height: auto;\r\n  margin: 15px 0px;\r\n  padding: 0px 10px;\r\n  border-left: 4px solid ${BaseColors.darkPurple};\r\n  transition: 300ms;\r\n  transition-delay: ${(props) => (props.index * 100) + 800}ms;\r\n  transform: translateX(${(props) => props.visible ? \"10px\" : \"0px\"});\r\n  opacity: ${(props) => props.visible ? \"1\" : \"0\"};\r\n`;\r\n\r\nconst IntroduceTitle = styled.div`\r\n  font-size: 1.3em;\r\n  font-weight: 700;\r\n  text-align: left;\r\n  color: ${BaseColors.darkPurple};\r\n`;\r\n\r\nconst IntroduceContent = styled.div`\r\n  font-size: 1em;\r\n  text-align: left;\r\n  color: black;\r\n`;\r\n\r\nexport const AboutMe = () => {\r\n  return (\r\n    <TransitionContext.Consumer>\r\n      {currentViewIndex => {\r\n        return <Section index={0} title=\"About Me\" subTitle=\"自己紹介\" content={(\r\n          <Container>\r\n            {AboutMeValue.map((value, index) => {\r\n              return <Introduce index={index} visible={currentViewIndex === 0}>\r\n                <IntroduceTitle>{value.title}</IntroduceTitle>\r\n                <IntroduceContent>{value.content}</IntroduceContent>\r\n              </Introduce>\r\n            })}\r\n          </Container>\r\n        )} />\r\n      }}\r\n    </TransitionContext.Consumer>\r\n  );\r\n};","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { BaseColors } from 'data/BaseColors'\r\nimport { SkillData, SkillCategory } from 'data/type/SkillData'\r\n\r\nconst Background = styled.div`\r\n  height: fit-content;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  padding: 1em 2em;\r\n  margin: 2em 0;\r\n  align-items: center;\r\n  box-shadow: 0 0 5px 0 ${BaseColors.shadow};\r\n`;\r\n\r\nconst Icon = styled.img`\r\n  height: 2em;\r\n  width: 2em;\r\n`;\r\n\r\nconst SkillName = styled.div`\r\n  font-size: 1.3em;\r\n  color: ${BaseColors.darkGrey};\r\n  margin-bottom: 0.5em;\r\n`;\r\n\r\nconst Description = styled.div`\r\n  font-size: 0.8em;\r\n`;\r\n\r\ntype Props = { data: SkillData };\r\n\r\nexport const SkillCard = (props: Props) => {\r\n  return (\r\n    <Background>\r\n      <Icon src={props.data.iconSrc} />\r\n      <SkillName>{props.data.name}</SkillName>\r\n      <Description>{props.data.description}</Description>\r\n    </Background>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { BaseColors } from 'data/BaseColors'\r\nimport { SkillData, SkillCategory } from 'data/type/SkillData'\r\nimport { SkillCard } from 'components/sections/skills/components/SkillCard'\r\n\r\nconst Container = styled.div`\r\n  height: fit-content;\r\n  width: 28%;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  height: fit-content;\r\n  width: fit-content;\r\n  text-align: center;\r\n  font-size: 1.5em;\r\n  padding: 0 1em;\r\n  margin: 1em auto;\r\n  font-weight: 700;\r\n  border-right: 2px solid ${BaseColors.darkPurple};\r\n  border-left: 2px solid ${BaseColors.darkPurple};\r\n`;\r\n\r\ntype Props = {\r\n  category: SkillCategory,\r\n  skills: SkillData[],\r\n};\r\n\r\nexport const SkillsUnit = (props: Props) => {\r\n  return (\r\n    <Container>\r\n      <Title>{props.category}</Title>\r\n      {props.skills.map((skill) => <SkillCard data={skill} />)}\r\n    </Container>\r\n  );\r\n};\r\n","import { SkillData, SkillCategory } from 'data/type/SkillData'\r\n\r\nexport const SkillValue: SkillData[] = [\r\n  {\r\n    skillType: SkillCategory.language,\r\n    iconSrc: \"skill_icon/Dart.svg\",\r\n    name: \"Dart\",\r\n    description: \"主にFlutterを書く言語として利用しています\",\r\n  },\r\n  /* {\r\n    skillType: SkillCategory.language,\r\n    iconSrc: \"\",\r\n    name: \"Python\",\r\n    description: \"競プロのときに使います (競プロをしないので使っていない)\",\r\n  }, */\r\n  {\r\n    skillType: SkillCategory.language,\r\n    iconSrc: \"skill_icon/TypeScript.svg\",\r\n    name: \"TypeScript\",\r\n    description: \"まだ初歩的なサイトを書く程度しかできません\",\r\n  },\r\n  {\r\n    skillType: SkillCategory.framework,\r\n    iconSrc: \"skill_icon/Flutter.svg\",\r\n    name: \"Flutter\",\r\n    description: \"Flutterは楽しいのでみんなやりましょう\",\r\n  },\r\n  {\r\n    skillType: SkillCategory.framework,\r\n    iconSrc: \"skill_icon/React.svg\",\r\n    name: \"React\",\r\n    description: \"TypeScriptと併用して学習中です\",\r\n  },\r\n  {\r\n    skillType: SkillCategory.tool,\r\n    iconSrc: \"skill_icon/Git.png\",\r\n    name: \"Git\",\r\n    description: \"人並みかそれ以下くらいには扱えます\",\r\n  },\r\n  {\r\n    skillType: SkillCategory.tool,\r\n    iconSrc: \"skill_icon/GitHub.svg\",\r\n    name: \"GitHub\",\r\n    description: \"基本的な使い方は履修できていると思います\",\r\n  },\r\n];","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { BaseColors } from 'data/BaseColors'\r\nimport { TransitionContext } from 'App'\r\nimport { Section } from 'components/sections/Section'\r\nimport { SkillsUnit } from 'components/sections/skills/components/SkillsUnit'\r\nimport { SkillData, SkillCategory } from 'data/type/SkillData'\r\nimport { SkillValue } from 'data/value/SkillValue'\r\n\r\nconst Container = styled.div<{ visible: Boolean }>`\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 2em;\r\n  padding-top: 0;\r\n  justify-content: space-around;\r\n\r\n  transition: 400ms ease-in;\r\n  transition-delay: ${(props) => props.visible ? \"400\" : \"800\"}ms;\r\n  opacity: ${(props) => props.visible ? \"1\" : \"0\"};\r\n  transform: translateY(${(props) => props.visible ? \"0px\" : \"6px\"});\r\n`;\r\n/*display: inline-block;\r\n  box-sizing: border-box;\r\n  width: 100%;*/\r\n\r\nexport const Skills = () => {\r\n  const languagesSkills: SkillData[] =\r\n    SkillValue.filter((data) => data.skillType === SkillCategory.language);\r\n  const frameworksSkills: SkillData[] =\r\n    SkillValue.filter((data) => data.skillType === SkillCategory.framework);\r\n  const toolsSkills: SkillData[] =\r\n    SkillValue.filter((data) => data.skillType === SkillCategory.tool);\r\n\r\n  return (\r\n    <TransitionContext.Consumer>\r\n      {currentViewIndex => (\r\n        <Section index={1} title=\"Skills\" subTitle=\"できること\" content={(\r\n          <Container visible={currentViewIndex === 1}>\r\n            <SkillsUnit category={SkillCategory.language} skills={languagesSkills} />\r\n            <SkillsUnit category={SkillCategory.framework} skills={frameworksSkills} />\r\n            <SkillsUnit category={SkillCategory.tool} skills={toolsSkills} />\r\n          </Container>\r\n        )} />\r\n      )}\r\n    </TransitionContext.Consumer>\r\n  );\r\n};\r\n","import { WorkData } from 'data/type/WorkData'\r\n\r\nexport const WorkValue: WorkData[] = [\r\n  /*{\r\n    name: \"PCK 2020 Mobile\",\r\n    url: \"\",\r\n    tag: [\"Flutter\", \"Dart\", \"Firebase\"],\r\n    snapshotSrc: \"works_snapshot/.png\",\r\n  },*/\r\n  {\r\n    name: \"Portfolio Site (here)\",\r\n    url: \"https://github.com/ko50/ko50.github.io\",\r\n    tag: [\"TypeScript\", \"React\"],\r\n    snapshotSrc: \"works_snapshot/Portfolio.png\",\r\n  },\r\n  {\r\n    name: \"Reproduced Tetris on Flutter\",\r\n    url: \"https://github.com/ko50/re-tetris\",\r\n    tag: [\"Dart\", \"Flutter\"],\r\n    snapshotSrc: \"works_snapshot/re_tetris.png\",\r\n  }\r\n];\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { BaseColors } from 'data/BaseColors'\r\nimport { TransitionContext } from 'App'\r\nimport { WorkData } from 'data/type/WorkData'\r\n\r\nconst BackgroundLink = styled.a<{ visible: Boolean }>`\r\n  box-shadow: 0 1px 3px 0 ${BaseColors.shadow};\r\n  width: 40%;\r\n  display: block;\r\n  text-decoration: none;\r\n  border: 1px solid ${BaseColors.darkPurple};\r\n  border-radius: 2px;\r\n  color: ${BaseColors.darkPurple};\r\n  margin: 2rem;\r\n\r\n  transition: 300ms;\r\n  visibility: ${(props) => props.visible ? \"visible\" : \"hidden\"};\r\n\r\n  :hover {\r\n    background-color: ${BaseColors.darkPurple};\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst Snapshot = styled.img`\r\n  box-shadow: 0 2px 2px 0 ${BaseColors.shadow};\r\n  flex: 1;\r\n  width: 100%;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  padding: 0.6em 1em;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 1.2em;\r\n  font-weight: 700;\r\n  text-align: left;\r\n`;\r\n\r\nconst Tags = styled.div`\r\n  margin: 0.5em 0;\r\n  font-size: 0.6em;\r\n  text-align: left;\r\n  font-weight: 300;\r\n`;\r\n\r\ntype Props = { data: WorkData };\r\n\r\nexport const WorkCard = (props: Props) => {\r\n  return (\r\n    <TransitionContext.Consumer>\r\n      {currentViewIndex => (\r\n        <BackgroundLink\r\n          href={props.data.url}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          visible={currentViewIndex === 2}\r\n        >\r\n          <Snapshot src={props.data.snapshotSrc} />\r\n          <Container>\r\n            <Title>{props.data.name}</Title>\r\n            <Tags>Tag: {props.data.tag.join(\" \")}</Tags>\r\n          </Container>\r\n        </BackgroundLink>\r\n      )}\r\n    </TransitionContext.Consumer>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { BaseColors } from 'data/BaseColors'\r\nimport { WorkValue } from 'data/value/WorkValue'\r\nimport { Section } from 'components/sections/Section'\r\nimport { WorkCard } from 'components/sections/works/components/WorkCard'\r\n\r\n\r\nexport const Works = () => {\r\n  return (\r\n    <Section index={2} title=\"Works\" subTitle=\"やったこと\" content={(\r\n      <>\r\n        {WorkValue.map((value) => <WorkCard data={value} />)}\r\n      </>\r\n    )} />\r\n  );\r\n};","import { ContactData } from 'data/type/ContactData'\r\n\r\nexport const ContactValue: ContactData[] = [\r\n  {\r\n    serviceName: \"Twitter\",\r\n    caption: \"@ko_CottonLove\",\r\n    url: \"https://twitter.com/ko_CottonLove\",\r\n    iconSrc: \"contact_icon/Twitter.png\"\r\n  },\r\n  {\r\n    serviceName: \"GitHub\",\r\n    caption: \"@ko50\",\r\n    url: \"https://github.com/ko50\",\r\n    iconSrc: \"contact_icon/GitHub.svg\",\r\n  },\r\n];","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { BaseColors } from 'data/BaseColors'\r\nimport { ContactData } from 'data/type/ContactData'\r\nimport { TransitionContext } from 'App'\r\nimport { FadeoutAnimation, FadeinAnimation } from 'helpers/FadeAnimation'\r\nimport { Section } from 'components/sections/Section'\r\n\r\nconst Background = styled.a<{ visible: Boolean }>`\r\n  width: 40%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  box-shadow: 2px 2px 5px 0 ${BaseColors.shadow};\r\n  transition: 300ms;\r\n  margin: 1em;\r\n  padding: 1.5em;\r\n  box-sizing: border-box;\r\n  height: auto;\r\n  width: auto;\r\n  display: block;\r\n  text-decoration: none;\r\n\r\n  :hover {\r\n    transform: rotate(-1deg) scale(1.5) translate3d(0, 0, 0);\r\n  }\r\n\r\n  animation: ${(props) => (\r\n    props.visible\r\n      ? FadeinAnimation\r\n      : FadeoutAnimation\r\n  )};\r\n  animation-delay: ${(props) => props.visible ? \"200\" : \"0\"}ms;\r\n  animation-duration: 300ms;\r\n  visibility: ${(props) => props.visible ? \"visible\" : \"hidden\"};\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Leading = styled.img`\r\n  height: 3em;\r\n  width: 3em;\r\n`;\r\n\r\nconst CardName = styled.div`\r\n  text-align: left;\r\n  font-size: 1.4em;\r\n  margin-left: 1em;\r\n  color: ${BaseColors.darkGrey};\r\n`;\r\n\r\ntype Props = { data: ContactData };\r\n\r\nexport const ContactCard = (props: Props) => {\r\n  return (\r\n    <TransitionContext.Consumer>\r\n      {currentViewIndex => (\r\n        <Background\r\n          href={props.data.url}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          visible={currentViewIndex === 3}\r\n        >\r\n          <Container>\r\n            <Leading src={props.data.iconSrc} />\r\n            <CardName>{props.data.caption}</CardName>\r\n          </Container>\r\n        </Background>\r\n      )}\r\n    </TransitionContext.Consumer>\r\n  );\r\n};","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { BaseColors } from 'data/BaseColors'\r\nimport { Section } from 'components/sections/Section'\r\nimport { ContactValue } from 'data/value/ContactValue'\r\nimport { TransitionContext } from 'App'\r\nimport { ContactCard } from 'components/sections/contacts/components/ContactCard'\r\n\r\nconst Container = styled.div<{ visible: Boolean }>`\r\n  width: auto;\r\n`;\r\n\r\nexport const Contacts = () => {\r\n  return (\r\n    <Section index={3} title=\"Contacts\" subTitle=\"連絡先\" content={(\r\n      <TransitionContext.Consumer>\r\n        {currentViewIndex => (\r\n          <Container visible={currentViewIndex === 3}>\r\n            {ContactValue.map((value) => (\r\n              <ContactCard data={value} />\r\n            ))}\r\n          </Container>\r\n        )}\r\n      </TransitionContext.Consumer>\r\n    )} />\r\n  );\r\n};","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { BaseColors } from 'data/BaseColors'\r\nimport { Header } from 'components/header/Header'\r\nimport Hello from 'components/hello/Hello'\r\nimport Footer from 'components/common/Footer'\r\nimport { AboutMe } from 'components/sections/about_me/AboutMe'\r\nimport { Skills } from 'components/sections/skills/Skills'\r\nimport { Works } from 'components/sections/works/Works'\r\nimport { Contacts } from 'components/sections/contacts/Contacts'\r\n\r\nconst Root = styled.div`\r\n  text-align: center;\r\n  min-height: 120vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ContentWrapper = styled.div<{ visible: Boolean }>`\r\n  width: 100%;\r\n  min-height: 120vh;\r\n  background: linear-gradient(white, ${BaseColors.pink});\r\n  transition: 300ms;\r\n  flex: 1;\r\n  ${(props) => props.visible ? \"\" : \"background: white;\"}\r\n`;\r\n\r\nexport const TransitionContext: React.Context<number> = React.createContext(-1);\r\n\r\nconst App = () => {\r\n  const [currentViewIndex, updateView] = React.useState(-1);\r\n\r\n  return (\r\n    <Root>\r\n      <TransitionContext.Provider value={currentViewIndex}>\r\n        <Header updateView={(index: number) => updateView(index)} />\r\n        <ContentWrapper visible={currentViewIndex === -1}>\r\n          <Hello />\r\n          <AboutMe />\r\n          <Skills />\r\n          <Works />\r\n          <Contacts />\r\n        </ContentWrapper>\r\n      </TransitionContext.Provider>\r\n      <Footer />\r\n    </Root >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
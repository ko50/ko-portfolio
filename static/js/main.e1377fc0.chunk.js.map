{"version":3,"sources":["data/Color.ts","comps/header/atom/HeaderBG.tsx","comps/header/atom/PortfolioLogo.tsx","comps/header/Header.tsx","comps/cover/atom/Cotton.tsx","comps/cover/atom/Background.tsx","comps/cover/atom/HelloWorld.tsx","comps/cover/Cover.tsx","data/value/AboutMeValues.ts","comps/common/Formatter.tsx","comps/aboutme/atom/Information.tsx","comps/aboutme/mol/InfoList.tsx","comps/aboutme/AboutMe.tsx","comps/skills/atom/FrameworkList.tsx","comps/skills/mol/SkillInfo.tsx","data/type/SkillData.ts","data/value/SkillValues.ts","comps/skills/Skills.tsx","data/value/ProductValues.ts","comps/products/mol/ProductCard.tsx","comps/products/Products.tsx","data/value/ContactValues.ts","comps/contact/atom/ContactButton.tsx","comps/contact/mol/ContactInfo.tsx","comps/contact/Contact.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["BaseColors","HeaderBG","styled","header","LogoImage","img","Logo","src","alt","Header","BackCircle","div","CircledImage","Cotton","Background","WelcomeText","p","HelloWorld","Cover","AboutMeValues","title","content","TopicTitle","StrongText","GeneralText","Root","Title","Content","Information","props","InfoList","Introduce","AboutMe","map","info","FrameworkCard","FrameworkList","frameworks","frameworkName","LangLogo","SkillName","Mastery","Description","SkillInfo","logoSrc","name","mastery","description","masteryLevelMap","SkillValues","SkillsList","Skills","skill","ProductValues","url","langName","Link","a","Eyecatch","Lang","ProductCard","screenshotSrc","href","target","rel","ProductsList","Products","product","ContactValues","serviceName","imageColor","icon","AiFillTwitterCircle","GrGithub","span","LogoWrapper","ContactButton","ServiceName","ContactInfo","ContactInfoList","Contact","contactInfo","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e1377fc0.chunk.js","sourcesContent":["export const BaseColors = {\r\n    whitishpink: \"#fdfaff\",\r\n    purpleblack: \"#1b0424\",\r\n    darkpurple: \"#280E3B\",\r\n    purple: \"#531a70\",\r\n    whitishpurple: \"#dbbae0\",\r\n    lighterpurple: \"#ac52c7\",\r\n    redishpurple: \"#bd3a9a\",\r\n    grey: \"#707070\",\r\n    black: \"#171717\",\r\n};","import styled from 'styled-components';\r\nimport { BaseColors } from 'data/Color';\r\n\r\nexport const HeaderBG = styled.header`\r\n  position: sticky;\r\n  background-color: ${BaseColors.darkpurple};\r\n  height: 4em;\r\n  width: 100%;\r\n  text-align: left;\r\n  float: left;\r\n  color: ${BaseColors.purple};\r\n  border-bottom: 4px solid #D3B7D8;\r\n  box-shadow: 0 0px 5px 0 rgba(0, 0, 0, .5);\r\n\r\n  @media screen and (max-width: 50em) {\r\n    height: 3em;\r\n    border-bottom: 2.5px solid #D3B7D8;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst LogoImage = styled.img`\r\n  margin-left: 2em;\r\n  margin-top: 0.6em;\r\n  height: 3em;\r\n\r\n  @media screen and (max-width: 50em) {\r\n    height: 2em;\r\n    margin-left: 1.2em;\r\n  }\r\n`;\r\n\r\nexport function Logo() {\r\n  return <LogoImage src=\"ko.png\" alt=\"ko-Portfolio\" />\r\n}","import React from 'react';\r\nimport { HeaderBG } from './atom/HeaderBG';\r\nimport { Logo } from './atom/PortfolioLogo';\r\n\r\nexport function Header(): JSX.Element {\r\n  return (\r\n    <HeaderBG>\r\n      <Logo />\r\n    </HeaderBG>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { BaseColors } from 'data/Color';\r\n\r\nconst BackCircle = styled.div`\r\n  height: 11em;\r\n  width: 11em;\r\n  align-items: center;\r\n  background: linear-gradient(-45deg, ${BaseColors.purple} 0%,  ${BaseColors.redishpurple} 100%);\r\n  border-radius: 50%;\r\n  box-shadow: 0 0px 5px 0 rgba(0, 0, 0, .5);\r\n\r\n  @media screen and (max-width: 50em) {\r\n    height: 9em;\r\n    width: 9em;\r\n  }\r\n`;\r\n\r\nconst CircledImage = styled.img`\r\n  height: 10em;\r\n  width: 10em;\r\n  pointer-events: none;\r\n  margin: 0.25em;\r\n  border: 0.25em solid white;\r\n  border-radius: 50%;\r\n\r\n  @media screen and (max-width: 50em) {\r\n    height: 8em;\r\n    width: 8em;\r\n  }\r\n`;\r\n\r\nexport function Cotton() {\r\n  return (\r\n    <BackCircle>\r\n      <CircledImage src=\"cotton_circle.png\" alt=\"logo\" />\r\n    </BackCircle>\r\n  );\r\n}","import styled from 'styled-components';\r\nimport { BaseColors } from 'data/Color';\r\n\r\nexport const Background = styled.div`\r\n  background: linear-gradient(white, ${BaseColors.whitishpink});\r\n  min-height: 60vh;\r\n  display: flex;\r\n  width: 100%;\r\n  border-bottom: 2px solid ${BaseColors.purple};\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: calc(10px + 2vmin);\r\n  box-shadow: 0 0px 5px 0 rgba(0, 0, 0, .5);\r\n\r\n  @media screen and (max-width: 50em) {\r\n    min-height: 40vh;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { BaseColors } from 'data/Color';\r\n\r\nconst WelcomeText = styled.p`\r\n  font-size: 1.3em;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  padding-bottom: 0.2em;\r\n  color: ${BaseColors.purpleblack};\r\n\r\n  @media screen and (max-width: 50em) {\r\n    font-size: 1.4em;\r\n    margin: 0.5em;\r\n  }\r\n`;\r\n\r\nexport function HelloWorld() {\r\n  return <WelcomeText>Hello World, My name is ko!</WelcomeText>;\r\n}","import React from 'react';\r\nimport { Cotton } from './atom/Cotton';\r\nimport { Background } from './atom/Background';\r\nimport { HelloWorld } from './atom/HelloWorld';\r\n\r\nexport function Cover() {\r\n  return (\r\n    <Background>\r\n      <Cotton />\r\n      <HelloWorld />\r\n    </Background>\r\n  );\r\n}\r\n","import { AboutMeData } from 'data/type/AboutMeData';\r\n\r\nexport const AboutMeValues: AboutMeData[] = [\r\n    {\r\n        title: \"所属\",\r\n        content: \"茨城工業高等専門学校 国際創造工学科 二年\",\r\n    },\r\n    {\r\n        title: \"専攻\",\r\n        content: \"情報系/グローバル系 専攻\",\r\n    },\r\n    {\r\n        title: \"名前\",\r\n        content: \"koといいます。とても呼びにくいので呼称としてふさわしくない。由来は本名です。\",\r\n    },\r\n    {\r\n        title: \"出生\",\r\n        content: \"西暦2004生まれ、現在16歳 男性\",\r\n    },\r\n];\r\n","import styled from 'styled-components';\r\nimport { BaseColors } from 'data/Color';\r\n\r\nexport const TopicTitle = styled.p`\r\n  color: ${BaseColors.purpleblack};\r\n  font-weight: bold;\r\n  padding-bottom: 0.1em;\r\n  margin-bottom: 0px;\r\n  display: inline-block;\r\n  font-size: 3em;\r\n  border-bottom: 2px solid ${BaseColors.purpleblack};\r\n\r\n  @media screen and (max-width: 50em) {\r\n    font-size: 2.5em;\r\n  }\r\n`;\r\n\r\nexport const StrongText = styled.p`\r\n  font-size: 1em;\r\n  font-weight: bold;\r\n  color: ${BaseColors.purpleblack};\r\n`;\r\n\r\nexport const GeneralText = styled.p`\r\n  font-size: 1em;\r\n  color: ${BaseColors.purpleblack};\r\n  text-align: start;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { BaseColors } from 'data/Color';\r\nimport { AboutMeData } from 'data/type/AboutMeData';\r\n\r\nconst Root = styled.div`\r\n  margin: 1em 2em;\r\n  align-items: start;\r\n\r\n  @media screen and (max-width: 50em) {\r\n    border-bottom: 1px solid ${BaseColors.purpleblack};\r\n    padding: 0.5em;\r\n  }\r\n`;\r\n\r\nconst Title = styled.p`\r\n  font-weight: bold;\r\n  font-size: 1.2em;\r\n  text-align: start;\r\n  margin-bottom: 2px;\r\n  color: ${BaseColors.purpleblack};\r\n\r\n  @media screen and (max-width: 50em) {\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst Content = styled.p`\r\n  font-size: 1em;\r\n  text-align: start;\r\n  margin: 2px;\r\n  color: ${BaseColors.purpleblack};\r\n\r\n  @media screen and (max-width: 50em) {\r\n    text-align: center;\r\n    font-size: 0.8em;\r\n  }\r\n`;\r\n\r\nexport function Information(props: AboutMeData) {\r\n  return (\r\n    <Root>\r\n      <Title>{props.title}</Title>\r\n      <Content>{props.content}</Content>\r\n    </Root>\r\n  );\r\n}","import styled from 'styled-components';\r\nimport { BaseColors } from 'data/Color';\r\n\r\nexport const InfoList = styled.div`\r\n  margin-top: 3em;\r\n  padding: 0 2em;\r\n  border-top: 1px solid ${BaseColors.purpleblack};\r\n  border-right: 2px solid ${BaseColors.purpleblack};\r\n  border-bottom: 2px solid ${BaseColors.purpleblack};\r\n  border-left: 1px solid ${BaseColors.purpleblack};\r\n  border-radius: 2em;\r\n\r\n  @media screen and (max-width: 50em) {\r\n    margin-top: 1em;\r\n    border: none;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { BaseColors } from 'data/Color';\r\nimport { AboutMeValues } from 'data/value/AboutMeValues';\r\nimport { TopicTitle, StrongText } from '../common/Formatter';\r\nimport { Information } from './atom/Information';\r\nimport { InfoList } from './mol/InfoList';\r\n\r\nconst Root = styled.div`\r\n  align-items: center;\r\n  margin-top: 1em;\r\n  color: ${BaseColors.purpleblack}\r\n`;\r\n\r\nconst Introduce = styled(StrongText)`\r\n  display: inline-block;\r\n  text-align: start;\r\n\r\n  @media screen and (max-width: 50em) {\r\n    margin: 1em 2em;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport function AboutMe(): JSX.Element {\r\n  return (\r\n    <Root>\r\n      <TopicTitle>About Me</TopicTitle>\r\n      <StrongText>自己紹介</StrongText>\r\n      <InfoList>\r\n        {AboutMeValues.map((info) =>\r\n          <Information\r\n            title={info.title}\r\n            content={info.content} />\r\n        )}\r\n      </InfoList>\r\n      <Introduce>\r\n        何もかも出遅れた系高専生です。一日に一回は頭を抱えて過去を呪っています。 <br />\r\n      </Introduce>\r\n    </Root>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { BaseColors } from 'data/Color';\r\n\r\nconst Root = styled.div`\r\n  margin: 0px;\r\n  align-items: center;\r\n`;\r\n\r\nconst FrameworkCard = styled.div`\r\n  border-radius: 0.8em;\r\n  display: inline-block;\r\n  color: white;\r\n  font-size: 0.5em;\r\n  background: linear-gradient(-45deg, ${BaseColors.darkpurple} 0%,  ${BaseColors.purple} 100%);\r\n  border: 1px solid black;\r\n  box-shadow: 0 1.5px 2px 0 rgba(0, 0, 0, .5);\r\n  box-shadow: 0 0px 1px 0 rgba(0, 0, 0, .5);\r\n  margin: 1px 2.5px;\r\n  padding: 2.5px 5px;\r\n  font-weight: bold;\r\n\r\n  @media screen and (max-width: 50em) {\r\n    border-radius: 0.6em;\r\n  }\r\n`;\r\n\r\ntype FrameworksProps = {\r\n  frameworks: string[];\r\n}\r\n\r\nexport function FrameworkList(props: FrameworksProps) {\r\n  return (\r\n    <Root>\r\n      {props.frameworks.map((frameworkName) =>\r\n        <FrameworkCard>{frameworkName}</FrameworkCard>\r\n      )}\r\n    </Root>\r\n  );\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { BaseColors } from 'data/Color';\r\nimport { SkillData } from 'data/type/SkillData';\r\nimport { FrameworkList } from '../atom/FrameworkList';\r\n\r\nconst Root = styled.div`\r\n  height: 15em;\r\n  width: 20em;\r\n  margin: 2em;\r\n  margin-bottom: 0.5em;\r\n  background-color: white;\r\n  align-items: center;\r\n  text-align: center;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n`;\r\n\r\nconst LangLogo = styled.img`\r\n  height: 30px;\r\n  max-width: 50px;\r\n`;\r\n\r\nconst SkillName = styled.p`\r\n  margin-top: 5px;\r\n  font-size: 1em;\r\n  font-weight: bold;\r\n  color: black;\r\n`;\r\n\r\nconst Mastery = styled.p`\r\n  font-size: 0.7em;\r\n  color: ${BaseColors.purple};\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Description = styled.p`\r\n  width: 100%;\r\n  word-break: keep-all;\r\n  text-align: center;\r\n  display: inline-block;\r\n  margin-left: 0.5em;\r\n  color: ${BaseColors.purpleblack};\r\n\r\n  @media screen and (max-width: 50em) {\r\n    margin-top: 0px;\r\n    font-size: 0.8em;\r\n  }\r\n`;\r\n\r\nexport function SkillInfo(props: SkillData): JSX.Element {\r\n  const logoSrc: string = 'langIcon/' + props.name + \".svg\";\r\n\r\n  return (\r\n    <Root>\r\n      <LangLogo src={logoSrc} />\r\n      <SkillName>{props.name}</SkillName>\r\n      <FrameworkList frameworks={props.frameworks} />\r\n      <Mastery>{props.mastery}</Mastery>\r\n      <Description>{props.description}</Description>\r\n    </Root>\r\n  );\r\n}","export const masteryLevelMap: { [key: number]: string } = {\r\n  1: '👀 興味はある',\r\n  2: '🔰 勉強中',\r\n  3: '🤔 少しだけできる',\r\n  4: '👍 すき',\r\n  5: '✨ 完全に理解した'\r\n}\r\n\r\nexport type SkillData = {\r\n  name: string,\r\n  mastery: string,\r\n  description: string,\r\n  frameworks: string[],\r\n}\r\n","import { SkillData, masteryLevelMap } from 'data/type/SkillData';\r\n\r\nexport const SkillValues: SkillData[] = [\r\n  {\r\n    name: \"Python\",\r\n    mastery: masteryLevelMap[3],\r\n    description: \"最初に学んだプログラミング言語です。競プロでよく使います。\",\r\n    frameworks: [\"DiscordBot\"],\r\n  },\r\n  {\r\n    name: \"Dart\",\r\n    mastery: masteryLevelMap[4],\r\n    description: \"主にFlutterと一緒に使用します。最近は反抗期みたいです。\",\r\n    frameworks: [\"Flutter\", \"DiscordBot\"],\r\n  },\r\n  {\r\n    name: \"Kotlin\",\r\n    mastery: masteryLevelMap[2],\r\n    description: \"自由度が高いのに綺麗に書けるので、書いていて楽しくてとても好きです。\",\r\n    frameworks: [\"Android-Native\"],\r\n  },\r\n  {\r\n    name: \"TypeScript\",\r\n    mastery: masteryLevelMap[2],\r\n    description: \"このポートフォリオを書くのに合わせ、Reactと一緒に勉強しています。\",\r\n    frameworks: [\"React\"],\r\n  },\r\n  {\r\n    name: \"CSS\",\r\n    mastery: masteryLevelMap[3],\r\n    description: \"つい強引な記法をしてしまうので、早く完全理解したいです。\",\r\n    frameworks: [\"styled-components\"],\r\n  },\r\n  {\r\n    name: \"Go\",\r\n    mastery: masteryLevelMap[2],\r\n    description: \"少し勉強したものの放置中なので、時間ができ次第また触ろうと思っています。\",\r\n    frameworks: [\"DiscordBot\"],\r\n  },\r\n];\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { TopicTitle, StrongText } from '../common/Formatter';\r\nimport { SkillData } from 'data/type/SkillData';\r\nimport { SkillInfo } from './mol/SkillInfo';\r\nimport { SkillValues } from 'data/value/SkillValues';\r\n\r\nconst Root = styled.div`\r\n  align-items: center;\r\n`;\r\n\r\nconst SkillsList = styled.div`\r\n  display: inline-block;\r\n`;\r\n\r\nexport function Skills() {\r\n  return (\r\n    <Root>\r\n      <TopicTitle>Language Skills</TopicTitle>\r\n      <StrongText>触った/扱える言語</StrongText>\r\n      <SkillsList>\r\n        {SkillValues.map((skill: SkillData) => (\r\n          <SkillInfo\r\n            name={skill.name}\r\n            mastery={skill.mastery}\r\n            description={skill.description}\r\n            frameworks={skill.frameworks} />\r\n        ))}\r\n      </SkillsList>\r\n    </Root>\r\n  );\r\n}","import { ProductionData } from 'data/type/ProductData';\r\n\r\nexport const ProductValues: ProductionData[] = [\r\n    {\r\n        name: \"Portfolio\",\r\n        url: \"https://github.com/ko50/ko50.github.io\",\r\n        description: \"Here is a product sample.\",\r\n        langName: \"Typescript/React\"\r\n    },\r\n];\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { BaseColors } from 'data/Color';\r\nimport { ProductionData } from 'data/type/ProductData';\r\nimport { GeneralText } from '../../common/Formatter';\r\n\r\nconst Root = styled.div`\r\n  border: 2px solid ${BaseColors.purpleblack};\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, .5);\r\n  width: 25em;\r\n  min-height: 10em;\r\n  align-items: center;\r\n  margin-top: 2em;\r\n  margin-bottom: 2em;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease 0s;\r\n  color: ${BaseColors.purpleblack};\r\n\r\n  :hover {\r\n    background-color: ${BaseColors.purpleblack};\r\n    color: white;\r\n  }\r\n\r\n  @media screen and (max-width: 50em) {\r\n    width: 16em;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n  }\r\n`;\r\n\r\nconst Link = styled.a`\r\n  display: inline-block;\r\n  color: unset;\r\n  text-decoration: none;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Eyecatch = styled.img`\r\n  margin-top: 0px;\r\n  min-height: 6em;\r\n  width: 100%;\r\n  box-shadow: 0 0px 2px 0 rgba(0, 0, 0, .5);\r\n`;\r\n\r\nconst Title = styled.p`\r\n  font-size: 1.5em;\r\n  font-weight: bold;\r\n  text-align: start;\r\n  margin: 2px 1em;\r\n  bottom-border: 2px solid ${BaseColors.purpleblack};\r\n\r\n  @media screen and (max-width: 50em) {\r\n    font-size: 1.2em;\r\n  }\r\n`;\r\n\r\nconst Description = styled(GeneralText)`\r\n  margin: 0.5em 1em;\r\n  color: unset;\r\n\r\n  @media screen and (max-width: 50em) {\r\n    font-size: 0.7em;\r\n  }\r\n`;\r\n\r\nconst Lang = styled.div`\r\n  margin: 0.5em 1em;\r\n  font-weight: bold;\r\n  border-radius: 0.5em;\r\n  background-color: black;\r\n  display: inline-block;\r\n  padding: 2px 4px;\r\n  font-size: 0.5em;\r\n  color: white;\r\n  text-align: start;\r\n\r\n  @media screen and (max-width: 50em) {\r\n    padding: 1px 3px;\r\n    font-size: 0.4em;\r\n    margin-bottom: 1em;\r\n  }\r\n`;\r\n\r\nexport function ProductCard(props: ProductionData): JSX.Element {\r\n  const screenshotSrc: string = 'products/' + props.name + '.png';\r\n\r\n  return (\r\n    <Root>\r\n      <Link href={props.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <Eyecatch src={screenshotSrc} />\r\n        <Title>{props.name}</Title>\r\n        <Description>{props.description}</Description>\r\n        <Lang>{props.langName}</Lang>\r\n      </Link>\r\n    </Root>\r\n  );\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { TopicTitle, StrongText } from '../common/Formatter';\r\nimport { ProductValues } from 'data/value/ProductValues';\r\nimport { ProductCard } from './mol/ProductCard';\r\n\r\nconst Root = styled.div`\r\n  align-items: center;\r\n`;\r\n\r\nconst ProductsList = styled.div`\r\n  align-items: center;\r\n  width: 25em;\r\n  margin: auto;\r\n`;\r\n\r\nexport function Products(): JSX.Element {\r\n  return (\r\n    <Root>\r\n      <TopicTitle>Products</TopicTitle>\r\n      <StrongText>作成物…そこになければないですね</StrongText>\r\n      <ProductsList>\r\n        {ProductValues.map((product) =>\r\n          <ProductCard\r\n            name={product.name}\r\n            url={product.url}\r\n            description={product.description}\r\n            langName={product.langName}\r\n          />\r\n        )}\r\n      </ProductsList>\r\n    </Root>\r\n  );\r\n}\r\n","import { ContactInfoData } from 'data/type/ContactData';\r\nimport { AiFillTwitterCircle, GrGithub } from 'react-icons/all';\r\n\r\nexport const ContactValues: ContactInfoData[] = [\r\n    {\r\n        serviceName: \"Twitter\",\r\n        imageColor: \"#55acee\",\r\n        url: \"https://twitter.com/ko_CottonLove\",\r\n        icon: AiFillTwitterCircle,\r\n    },\r\n    {\r\n        serviceName: \"GitHub\",\r\n        imageColor: \"#171515\",\r\n        url: \"https://github.com/ko50\",\r\n        icon: GrGithub,\r\n    },\r\n];","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { BaseColors } from 'data/Color';\r\nimport { ContactInfoData } from 'data/type/ContactData';\r\n\r\nconst Root = styled.div`\r\n  height: 3em;\r\n  width: 3em;\r\n  margin: 0.5em 1em 0.5em 1em;\r\n  display: inline-block;\r\n  align-items: center;\r\n`;\r\n\r\nconst Link = styled.a`\r\n  height: 3em;\r\n  width: 3em;\r\n`;\r\n\r\nconst Logo = styled.span`\r\n  width: 100%;\r\n  height: 100%;\r\n  font-size: 3em;\r\n`;\r\n\r\nconst LogoWrapper = styled.div<{ imageColor: string }>`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 50%; \r\n  background-color: white;\r\n  color: ${BaseColors.grey};\r\n  transition: all 0.3s ease 0s;\r\n\r\n  :hover {\r\n    color: ${(props) => props.imageColor};\r\n  }\r\n\r\n  @media screen and (max-width: 50em) {\r\n    color: ${(props) => props.imageColor};\r\n    transition: none;\r\n    :hover { none }\r\n  }\r\n`;\r\n\r\nexport function ContactButton(props: ContactInfoData): JSX.Element {\r\n  return (\r\n    <Root>\r\n      <Link href={props.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <Logo>\r\n          <LogoWrapper imageColor={props.imageColor}>\r\n            <props.icon />\r\n          </LogoWrapper>\r\n        </Logo>\r\n      </Link>\r\n    </Root>\r\n  );\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ContactInfoData } from 'data/type/ContactData';\r\nimport { StrongText } from '../../common/Formatter';\r\nimport { ContactButton } from '../atom/ContactButton';\r\n\r\nconst Root = styled.div`\r\n  display: inline-block;\r\n\r\n  @media screen and (max-width: 50em) {\r\n    margin: 0px 10.5m;\r\n  }\r\n`;\r\n\r\nconst ServiceName = styled(StrongText)`\r\n  font-size: 0.9em;\r\n  margin-top: 0.3em;\r\n`;\r\n\r\nexport function ContactInfo(props: ContactInfoData) {\r\n  return (\r\n    <Root>\r\n      <ContactButton\r\n        serviceName={props.serviceName}\r\n        imageColor={props.imageColor}\r\n        url={props.url}\r\n        icon={props.icon}\r\n      />\r\n      <ServiceName>{props.serviceName}</ServiceName>\r\n    </Root>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { TopicTitle, StrongText } from '../common/Formatter';\r\nimport { BaseColors } from 'data/Color';\r\nimport { ContactValues } from 'data/value/ContactValues';\r\nimport { ContactInfo } from './mol/ContactInfo';\r\n\r\nconst Root = styled.div`\r\n  align-items: center;\r\n  margin-bottom: 2em;\r\n`;\r\n\r\nconst ContactInfoList = styled.div`\r\n  margin: 0.5em 2em;\r\n  border: 2px solid ${BaseColors.purpleblack};\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 2px rgba(0, 0, 0, .5);\r\n\r\n  @media screen and (max-width: 50em) {\r\n    border: none;\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport function Contact(): JSX.Element {\r\n  return (\r\n    <Root>\r\n      <TopicTitle>Contact</TopicTitle>\r\n      <StrongText>ご連絡などがあればこちらへ</StrongText>\r\n      <ContactInfoList>\r\n        {ContactValues.map((contactInfo) =>\r\n          <ContactInfo\r\n            serviceName={contactInfo.serviceName}\r\n            imageColor={contactInfo.imageColor}\r\n            url={contactInfo.url}\r\n            icon={contactInfo.icon}\r\n          />\r\n        )}\r\n      </ContactInfoList>\r\n    </Root>\r\n  );\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Header } from './comps/header/Header';\r\nimport { Cover } from './comps/cover/Cover';\r\nimport { AboutMe } from './comps/aboutme/AboutMe';\r\nimport { Skills } from './comps/skills/Skills';\r\nimport { Products } from './comps/products/Products';\r\nimport { Contact } from './comps/contact/Contact';\r\n\r\nconst Root = styled.div`\r\n  text-align: center;\r\n  min-height: 60vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Root>\r\n      <Header />\r\n      <Cover />\r\n      <AboutMe />\r\n      <Skills />\r\n      <Products />\r\n      <Contact />\r\n    </Root>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}